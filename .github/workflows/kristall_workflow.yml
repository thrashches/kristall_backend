name: kristall_backend

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  # Собрать и отправить образ приложения на DockerHub
  build:
    runs-on: ubuntu-latest
    # needs: tests # Не выполнять сразу, ждать, пока выполнится tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend/
          file: backend/Dockerfile
          tags: thrashches/kristall_backend:1.0.0
  # Деплой приложения на удалённый сервер
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd kristall_backend
            git pull
            cd kristall_infra
            docker pull thrashches/kristall_backend:1.0.0
            docker compose stop
            docker compose rm backend
            rm -rf .env
            touch .env
            echo DEBUG=0 >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            docker compose up -d

#  send_message:
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          format: html
#          message: |
#            <b>${{ github.workflow }}</b>
#
#            <b>${{ github.actor }}</b> сделал коммит в <code>master</code>.
#            <b>Сообщение к коммиту:</b> <code>${{ github.event.commits[0].message }}</code>
#            <b>Репозиторий:</b> <code>${{ github.repository }}</code>
#
#            <a href="https://github.com/${{ github.repository }}/commit/${{github.sha}}">Изменения</a>
#
#            <a href="http://${{ secrets.HOST }}/redoc/">Проверить что не упал прод</a>